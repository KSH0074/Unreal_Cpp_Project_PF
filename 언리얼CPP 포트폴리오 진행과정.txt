언리얼CPP 포트폴리오 

진행과정 : 
2023/02/17 : 초안 기획 및  게임모드베이스, 메인캐릭터 CPP 생성 및 블루프린트 생성 
2023/02/18 : NavMesh 적용과 인풋 세팅 및 캐릭터 이동 => BluePrint로 생성됨 이후 C++로 제작할 예정 
2023/02/20 : CharacterMovement ->Orient Rotation to Movement/ BP_mainPlayer이벤트 그래프 ->C++ 로 구현 
2023/02/20 : 게임 시작시 마우스 중앙으로 오게 설정, LineTrace로 기능 move 구현하려고 했는데 실패함 
2023/02/25 : 결국 Simple MoveTo 이용하여 움직임 설정, 이후 상하좌우 키 입력 추가예정, 드래그로도 이동하게 설정 
2023/02/26 : 드래그 이동 구현, 상하좌우 키 입력 추가, 0.5초 타이머 추가하여 시간 초과시 커맨드 휘발 구현, 
2023/02/27 : 커맨드 입력함수 리팩토링? 비슷한 함수 단일화, 캐릭터 무브먼트 회전세팅 z 720, 커맨드 테이블 출력확인
2023/03/02 : for문을 이용한 테이블 탐색 및 해당 커맨드 출력, //for문 대신 테이블 행을 검색해서 가져오는 방법으로 구현 
2023/03/03 : 입력한 커맨드에 맞는 함수 델리게이트로 바인드, 호출 

2023/03/04 : Enemy FSM 계획 및 BB 활용 방법 숙지 후 적용  	
참고  : https://docs.unrealengine.com/5.0/ko/behavior-tree-in-unreal-engine---quick-start-guide/

2023/03/09 : BlackBoard , BehaviorTree 사용법 테스트 프로젝트에 시범, 비주얼 스크립팅으로 제작, 순찰 중 플레이어 발견 시 이동하도록 함 
=> 추후 본 프로젝트에 적용할때는 C++을 사용하는 법 강구, FSM과 연계할 수 있게 해야 할 듯? >> 이걸 어케하지 
아니면 BB로만 할 수 있는 방법이 있나?

5~8/10~12 = 아르바이트 구직(?)

2023/03/13 = 델리게이트 관련 예외처리 추가, 테스트 프로젝트에서 BB, BT 이주 및 적용, 발견된 마지막 위치로 이동하게 하고 있으나 잘 안됨  
2023/03/16 ~
2023/03/20  : 생활비 및 자금조달(SSD확장 등)창출을 위한 아르바이트 적응기간 
2023/03/21  : 몹 AI 특정 범위벗어나면 돌아가도록 하는 BT 구성 
2023/03/22  : 로스트아크 처럼 몹이 처음 지정위치에서 크게 벗어나면 원래 자리로 가도록 하는 부분까지 AI 구현함 이후 본 포트폴리오 프로젝트에 이주할 예정 
2023/03/23  : 시야 법위를 축소 시킬 필요가 있을 듯 
-> 앞으로 해야 할 것: Enemy_character C++로 구현 및 BB , BTT 등 이주한 다른 블루프린트 작업물 또한 구현 해야 할 듯  
2023/03/24  : C++로 구현 보다는 먼저 애니메이션 적용과 데미지 적용, 죽음 애니메이션 몽타주 등 해야할 부분이 있다. 현재 컨디션의 극심한 저조로 내일 
장풍(Fire ball) 커맨드 입력시 발사체 구현 할 예정, 적 데미지(피격) 추가 
2023/03/26 : FireBall C++파일 제작 후 블루프린트로 생성하여 테스트 성공함, 
2023/03/27 : FireBall 사용시 마우스 커서 방향대로 날아가게 함 
2023/03/28 : FireBall 및 Player, Enemy, Floor 에대한 충돌 설정 변경 및 추가
2023/03/29 : FireBall 충돌 시스템 추가, Enemy 체력 및 피격함수 대략적인 기틀 완성,
2023/03/30 : FireBall에 Player정보를 가지도록 코드 설계 이후 테스트하는 코드 추가
2023/04/03 : FireBall 생성시 FireBall에 데미지 업데이트
2023/04/04 : DataTable에 데미지 추가, 후 적용 확인, Enemy AI결함 발견, 처리 해야함, FireBall생성시 겹쳐있으면 오류나는 문제 대략 수정, 추후 베타에서 점검 필요
2023/04/06 : AI BehaviorTree 적 캐릭터 피격시 Player 추적하는 대략적인 기틀 수정됨, BTT 이후 구현 필요
2023/04/07 : 부상이슈
2023/04/10 : EnemyAIController에서 Blackboard로 접근하여 is Damaged의 값을 셋 하도록 하기 위한 기틀 마련(AIcontroller에서 BlackBoard 접근 등), BluePrint로 구현하기 귀찮은? 부분을 C++을 통해 현함. 차후 다른 blueprint도 c++로 변경할 필요가 있을 수 있음  
2023/04/11 : C++코드를 통해 Blackboard 접근 후 값 변경 성공함, 사용한 함수를 약간 변형하여 블루프린트 상에서 사용가능하게 할 계획, 추적 끝나면 isDamaged는 false가 되도록 
2023/04/17 : BTT를 이용하여 추적이후 isDamaged 값을 false로 두는 시도 중  
2023/04/18 : 일단 isDamaged 설정 시도가 성공적으로 끝남 ,적 피격시 멈추게 하고 싶음, 0.5초 정도 피격애니메이션과 함께 정지
2023/04/19~20 : 프로토타입 마무리 기획 + 알파 기획 
2023/04/25 : 커스텀 뎁스를 이용해서 벽 뒤에있는 플레이어 표시 성공 but 벽 뿐만 아니라 다른 모든 사물에도 적용됨 => PostProcess Volume을 사용 or 스텐실 사용 중 고민 
2023/04/28 : 커스텀 뎁스 문제는 뒤로 미뤄두고 Player Movement 관련 TraceChannel 조정 하여 벽을 무시하고 이동지점 포인팅 가능해짐 

2023/04/29~05/22 : 초장기 휴식 
2023/05/29 : AI Behavior 재정리의 필요성을 느낌, 일부 Blueprint 테스트 코드 삭제 및 간결화, 애매한 코드?
2023/07/06 : Mixamo 로부터 애니메이션 받고, 해당 애니메이션을 Blender 애드온을 이용하여 Unreal에 맞게 컨버트 및 리타기팅 하는 법을 복기함 => 사본에서 진행됨 해당부분에서 베이스 포즈를 재 변경했음에도 애니메이션 포즈가 돌아오지 않는 문제를 해결해야함
2023/07/10 : Mixamo 캐릭터 Import 및 적용, 베이스 포즈 문제 해결됨, Blender 애드온 사용하지 않고 수동으로 휴머노이드 리타기팅 셋팅, Player 및 Enemy에 일부 적용, 관련 폴더 생성, 향후 계획 추가 
2023/07/11 : Mixamo Animation 추가 및 루트모션 설정, Enemy-Player 스켈레톤 분리 및 관리 용이하도록 폴더관리, Enemy AI 시야가 벽을 관통하는 부분 수정, 초기 위치로 되돌아 오도록 노드 추가 = 간략화 및작업, FireBall Destroy 타이머 설정, 
2023/07/17 : EnemyAI 수정하여 어디에서 피격되든지 Player 추격하도록 함, BehaviorTree 및 EnemyController 하여 player정보를 Enemy가 갖게함, 추후 정보 전달방식 변경예정 
2023/07/19 : 스킬 커맨드 구조 및 충돌처리 리마인드 
2023/07/21 : Enemy에 공격기능 추가를 위한 테스트코드 추가후 작동확인, 일부 경로가 변경된 부분 수정, BP_EnemyController 에서 Player 변수 제거 후 이벤트 그래프에서 GetPlayerPawn 함수를 이용하여 플레이어 캐릭터에 대한 정보 가지게 함, 코드 복기를 하면서 추후 개선해야 할 점 주석으로 표기 
2023/07/24 : BT_Enemy 재정리, 애니메이션 BP에서 스테이트 변경에 사용하기 위한 Bool변수 Enemy.h에 추가, 추후 UENUM으로 관리할 필요가 있을 걸로 보임 => FSM 화 하여 BT연계 예정, Enemy에 공격, 사망 애니메이션 연결, 공격 애니메이션은 추후 몽타주로 두 모션을 랜덤으로 보여줄 에정, 테스트를 위해 Enemy 체력 조정, 사망시 사라지는 시간 조정, Enemy_AnimationBP의 부모클래스 생성및 할당, 플레이어와의 거리가 공격범위 내로 가까워지면 바라보도록 설정(Actor가 아닌 Controller가), 주석 오타 수정및 보충 
2023/07/29 : Enemy 공격 모션 두가지 랜덤으로 발동되도록 몽타주 제작 및 C++ 내 함수 연결 및 구현 
2023/07/31 : Damage 와 HP Integer 형으로 변경, 일부 애니메이션 프레임 수 축소, 허공클릭시 0.0.0으로 이동하는 상황 제거(플레이어 hit박스 지정하려다 Moveable이 이상하게 작동되는 것을 알아냄),
프로젝트 세팅에 PlayerHitBox 추가, Player에 PlayerHitBox(BoxCollision)추가하고 Collision 설정 추가, Player 관련 코드 점검 

2023/08/03 : 언리얼엔진이 실행이 안되는 버그가 발생하였다, 로그를 통해 Enemy의 블루프린트 문제인걸 확인하고 C++ 생성자를 전부 주석처리했어야 열렸다. EnemyAI 개편 대 계획 수립, 계획 실패시 여기로 롤백
2023/08/04 : AI 대 개편 첫 삽, BB에 키값을 추가, BT 일부 수정및 계획, 코드 다시보기, EnmeyAIController.h 에 상태 변환을 위한 함수 선언
2023/08/07 : 상태변화를 위한 UENUM 생성, 이를 이용하여 상태변화를 하는 함수 및 BTT 생성, BT 수정, BT에 Attack 과 Die를 어떻게 넣는지에 대한 고민, 
2023/08/18 : 뜻하지 않게 장기간 쉬게되어 리마인드를 위한 코드다시 보기 및 계획 진행 
2023/08/22 : C++로 구현하기 위한 BBT 를 testNode라는 이름으로 만들어서 Attack to Player 코드를 옮기는 시도함, VisualStudio Inetelisense 문제있음 
2023/08/23 : Intellisense 문제 해결 및 testNode 삭제후 AttacktoPlayer 명의 BBTaskNode C++ 구현, EnemyDeath도 같은 방식으로 구현함 외 기존 코드 약간의 수정  
2023/08/25 : 코드내 오타 발견 및 수정, BT의 AttacktoPlayer시퀀스 데코레이터 관찰자 중단 설정, Enemy.cpp AttacktoPlayer 함수의 Player를 보도록 하는 코드 삭제->BT에서 Rotate to face BB entry로 대체함, 편의를 위한 getBlackBoardState 함수 EnemyAIController.h에 추가(특정 State의 값 반환), Enemy.cpp 의 tick함수의 if문 최적화(?), Enemy.cpp의 변수 Controller를 mController로 변경, 같은 파일의 OnDamageProcess의 GetController~ 부분 mController로 대체, Enemy공격 애니메이션 자연스럽게 플레이되도록 설정함   
2023/08/28 :Enemy의 공격판정 존을 생성자에 추가하였으나 BP에서 오류가 발생함,  
