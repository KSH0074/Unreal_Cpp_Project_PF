언리얼CPP 포트폴리오 

진행과정 : 
2023/02/17 : 초안 기획 및  게임모드베이스, 메인캐릭터 CPP 생성 및 블루프린트 생성 
2023/02/18 : NavMesh 적용과 인풋 세팅 및 캐릭터 이동 => BluePrint로 생성됨 이후 C++로 제작할 예정 
2023/02/20 : CharacterMovement ->Orient Rotation to Movement/ BP_mainPlayer이벤트 그래프 ->C++ 로 구현 
2023/02/20 : 게임 시작시 마우스 중앙으로 오게 설정, LineTrace로 기능 move 구현하려고 했는데 실패함 
2023/02/25 : 결국 Simple MoveTo 이용하여 움직임 설정, 이후 상하좌우 키 입력 추가예정, 드래그로도 이동하게 설정 
2023/02/26 : 드래그 이동 구현, 상하좌우 키 입력 추가, 0.5초 타이머 추가하여 시간 초과시 커맨드 휘발 구현, 
2023/02/27 : 커맨드 입력함수 리팩토링? 비슷한 함수 단일화, 캐릭터 무브먼트 회전세팅 z 720, 커맨드 테이블 출력확인
2023/03/02 : for문을 이용한 테이블 탐색 및 해당 커맨드 출력, //for문 대신 테이블 행을 검색해서 가져오는 방법으로 구현 
2023/03/03 : 입력한 커맨드에 맞는 함수 델리게이트로 바인드, 호출 

2023/03/04 : Enemy FSM 계획 및 BB 활용 방법 숙지 후 적용  	
참고  : https://docs.unrealengine.com/5.0/ko/behavior-tree-in-unreal-engine---quick-start-guide/

2023/03/09 : BlackBoard , BehaviorTree 사용법 테스트 프로젝트에 시범, 비주얼 스크립팅으로 제작, 순찰 중 플레이어 발견 시 이동하도록 함 
=> 추후 본 프로젝트에 적용할때는 C++을 사용하는 법 강구, FSM과 연계할 수 있게 해야 할 듯? >> 이걸 어케하지 
아니면 BB로만 할 수 있는 방법이 있나?

5~8/10~12 = 아르바이트 구직(?)

2023/03/13 = 델리게이트 관련 예외처리 추가, 테스트 프로젝트에서 BB, BT 이주 및 적용, 발견된 마지막 위치로 이동하게 하고 있으나 잘 안됨  
2023/03/16 ~
2023/03/20  : 생활비 및 자금조달(SSD확장 등)창출을 위한 아르바이트 적응기간 
2023/03/21  : 몹 AI 특정 범위벗어나면 돌아가도록 하는 BT 구성 
2023/03/22  : 로스트아크 처럼 몹이 처음 지정위치에서 크게 벗어나면 원래 자리로 가도록 하는 부분까지 AI 구현함 이후 본 포트폴리오 프로젝트에 이주할 예정 
2023/03/23  : 시야 법위를 축소 시킬 필요가 있을 듯 
-> 앞으로 해야 할 것: Enemy_character C++로 구현 및 BB , BTT 등 이주한 다른 블루프린트 작업물 또한 구현 해야 할 듯  
2023/03/24  : C++로 구현 보다는 먼저 애니메이션 적용과 데미지 적용, 죽음 애니메이션 몽타주 등 해야할 부분이 있다. 현재 컨디션의 극심한 저조로 내일 
장풍(Fire ball) 커맨드 입력시 발사체 구현 할 예정, 적 데미지(피격) 추가 
2023/03/26 : FireBall C++파일 제작 후 블루프린트로 생성하여 테스트 성공함, 
2023/03/27 : FireBall 사용시 마우스 커서 방향대로 날아가게 함 
2023/03/28 : FireBall 및 Player, Enemy, Floor 에대한 충돌 설정 변경 및 추가
2023/03/29 : FireBall 충돌 시스템 추가, Enemy 체력 및 피격함수 대략적인 기틀 완성,
2023/03/30 : FireBall에 Player정보를 가지도록 코드 설계 이후 테스트하는 코드 추가
2023/04/03 : FireBall 생성시 FireBall에 데미지 업데이트
2023/04/04 : DataTable에 데미지 추가, 후 적용 확인, Enemy AI결함 발견, 처리 해야함, FireBall생성시 겹쳐있으면 오류나는 문제 대략 수정, 추후 베타에서 점검 필요
2023/04/06 : AI BehaviorTree 적 캐릭터 피격시 Player 추적하는 대략적인 기틀 수정됨, BTT 이후 구현 필요
2023/04/07 : 부상이슈
2023/04/10 : EnemyAIController에서 Blackboard로 접근하여 is Damaged의 값을 셋 하도록 하기 위한 기틀 마련(AIcontroller에서 BlackBoard 접근 등), BluePrint로 구현하기 귀찮은? 부분을 C++을 통해 현함. 차후 다른 blueprint도 c++로 변경할 필요가 있을 수 있음  
2023/04/11 : C++코드를 통해 Blackboard 접근 후 값 변경 성공함, 사용한 함수를 약간 변형하여 블루프린트 상에서 사용가능하게 할 계획, 추적 끝나면 isDamaged는 false가 되도록 
2023/04/17 : BTT를 이용하여 추적이후 isDamaged 값을 false로 두는 시도 중  
2023/04/18 : 일단 isDamaged 설정 시도가 성공적으로 끝남 ,적 피격시 멈추게 하고 싶음, 0.5초 정도 피격애니메이션과 함께 정지
2023/04/19~20 : 프로토타입 마무리 기획 + 알파 기획 
2023/04/25 : 커스텀 뎁스를 이용해서 벽 뒤에있는 플레이어 표시 성공 but 벽 뿐만 아니라 다른 모든 사물에도 적용됨 => PostProcess Volume을 사용 or 스텐실 사용 중 고민 
2023/04/28 : 커스텀 뎁스 문제는 뒤로 미뤄두고 Player Movement 관련 TraceChannel 조정 하여 벽을 무시하고 이동지점 포인팅 가능해짐 

2023/04/29~05/22 : 초장기 휴식 
2023/05/29 : AI Behavior 재정리의 필요성을 느낌, 일부 Blueprint 테스트 코드 삭제 및 간결화, 애매한 코드?
2023/07/06 : Mixamo 로부터 애니메이션 받고, 해당 애니메이션을 Blender 애드온을 이용하여 Unreal에 맞게 컨버트 및 리타기팅 하는 법을 복기함 => 사본에서 진행됨 해당부분에서 베이스 포즈를 재 변경했음에도 애니메이션 포즈가 돌아오지 않는 문제를 해결해야함
2023/07/10 : Mixamo 캐릭터 Import 및 적용, 베이스 포즈 문제 해결됨, Blender 애드온 사용하지 않고 수동으로 휴머노이드 리타기팅 셋팅, Player 및 Enemy에 일부 적용, 관련 폴더 생성, 향후 계획 추가 
2023/07/11 : Mixamo Animation 추가 및 루트모션 설정, Enemy-Player 스켈레톤 분리 및 관리 용이하도록 폴더관리, Enemy AI 시야가 벽을 관통하는 부분 수정, 초기 위치로 되돌아 오도록 노드 추가 = 간략화 및작업, FireBall Destroy 타이머 설정, 
2023/07/17 : EnemyAI 수정하여 어디에서 피격되든지 Player 추격하도록 함, BehaviorTree 및 EnemyController 하여 player정보를 Enemy가 갖게함, 추후 정보 전달방식 변경예정 
2023/07/19 : 스킬 커맨드 구조 및 충돌처리 리마인드 
2023/07/21 : Enemy에 공격기능 추가를 위한 테스트코드 추가후 작동확인, 일부 경로가 변경된 부분 수정, BP_EnemyController 에서 Player 변수 제거 후 이벤트 그래프에서 GetPlayerPawn 함수를 이용하여 플레이어 캐릭터에 대한 정보 가지게 함, 코드 복기를 하면서 추후 개선해야 할 점 주석으로 표기 
2023/07/24 : BT_Enemy 재정리, 애니메이션 BP에서 스테이트 변경에 사용하기 위한 Bool변수 Enemy.h에 추가, 추후 UENUM으로 관리할 필요가 있을 걸로 보임 => FSM 화 하여 BT연계 예정, Enemy에 공격, 사망 애니메이션 연결, 공격 애니메이션은 추후 몽타주로 두 모션을 랜덤으로 보여줄 에정, 테스트를 위해 Enemy 체력 조정, 사망시 사라지는 시간 조정, Enemy_AnimationBP의 부모클래스 생성및 할당, 플레이어와의 거리가 공격범위 내로 가까워지면 바라보도록 설정(Actor가 아닌 Controller가), 주석 오타 수정및 보충 
2023/07/29 : Enemy 공격 모션 두가지 랜덤으로 발동되도록 몽타주 제작 및 C++ 내 함수 연결 및 구현 
2023/07/31 : Damage 와 HP Integer 형으로 변경, 일부 애니메이션 프레임 수 축소, 허공클릭시 0.0.0으로 이동하는 상황 제거(플레이어 hit박스 지정하려다 Moveable이 이상하게 작동되는 것을 알아냄),
프로젝트 세팅에 PlayerHitBox 추가, Player에 PlayerHitBox(BoxCollision)추가하고 Collision 설정 추가, Player 관련 코드 점검 

2023/08/03 : 언리얼엔진이 실행이 안되는 버그가 발생하였다, 로그를 통해 Enemy의 블루프린트 문제인걸 확인하고 C++ 생성자를 전부 주석처리했어야 열렸다. EnemyAI 개편 대 계획 수립, 계획 실패시 여기로 롤백
2023/08/04 : AI 대 개편 첫 삽, BB에 키값을 추가, BT 일부 수정및 계획, 코드 다시보기, EnmeyAIController.h 에 상태 변환을 위한 함수 선언
2023/08/07 : 상태변화를 위한 UENUM 생성, 이를 이용하여 상태변화를 하는 함수 및 BTT 생성, BT 수정, BT에 Attack 과 Die를 어떻게 넣는지에 대한 고민, 
2023/08/18 : 뜻하지 않게 장기간 쉬게되어 리마인드를 위한 코드다시 보기 및 계획 진행 
2023/08/22 : C++로 구현하기 위한 BBT 를 testNode라는 이름으로 만들어서 Attack to Player 코드를 옮기는 시도함, VisualStudio Inetelisense 문제있음 
2023/08/23 : Intellisense 문제 해결 및 testNode 삭제후 AttacktoPlayer 명의 BBTaskNode C++ 구현, EnemyDeath도 같은 방식으로 구현함 외 기존 코드 약간의 수정  
2023/08/25 : 코드내 오타 발견 및 수정, BT의 AttacktoPlayer시퀀스 데코레이터 관찰자 중단 설정, Enemy.cpp AttacktoPlayer 함수의 Player를 보도록 하는 코드 삭제->BT에서 Rotate to face BB entry로 대체함, 편의를 위한 getBlackBoardState 함수 EnemyAIController.h에 추가(특정 State의 값 반환), Enemy.cpp 의 tick함수의 if문 최적화(?), Enemy.cpp의 변수 Controller를 mController로 변경, 같은 파일의 OnDamageProcess의 GetController~ 부분 mController로 대체, Enemy공격 애니메이션 자연스럽게 플레이되도록 설정함   
2023/08/28 :Enemy의 공격판정 존을 생성자에 추가하였으나 BP에서 오류가 발생함,  

2023/08/29 ~ 2023/09/04 :예비군 및 개인사정으로 인한 공백 

2023/09/05 : 언리얼엔진 오류 해결 및 Enemy의 공격에 대한 Player의 판정 절차 주석으로 계획 
2023/09/07 : 플레이어 피격 및 데미지 적용, 사망까지 이벤트 연결됨, Enemy가 공격중 이동하지 않도록 하는 방법을 강구중 
2023/09/08 : 생각정리, 스트레스 이겨내기 
2023/09/11 : Enemy가 공격중 이동하지 않도록 하는 방법을 TickTask를 이용해서 해결하는 방법으로 접근 중, 일단 이것 저것 해보는 중
2023/09/12 : Enemy Tick 함수내에 문제가 있음을 드디어 인지함 ...이 간단한 if문 을 눈치채지못해서 5일을 날려먹다니.. 그래도 연구하면서 이것저것 배웟으니까../플레이어 피격시 몽타주 재생 되도록 하였고 노티파이 또한 함수와 연결이 잘 되어있는 것을 확인 
2023/09/14 : 피격시 입력 방지되도록 코드를 추가함, UPROPERTY/UFUNCTION 누락된 것 추가, 필요 없어진 약간의 코드 정리, Attack상태일때 피격시 State 가 변경되지 않는 버그를 수정하였다.
2023/09/15 : Enemy가공격중 사망 바로 안되는 문제해결, JangPoong 스킬 사용시 Fireball 애니메이션(몽타주)를 재생하였다. 이 과정에서 JangPoong함수를 분해 => JangPoong은 몽타주 재생 ThrowFireball은 발사 로 분해하였다. 입력제한 함수 및 적용 개선

2023/09/17 : MainPlayer의 FireBall 몽타주 재생중 피격될 시 JangPoong스킬이 발동 하지 않도록 함 ,TestCode로 시작했던 함수 GetABCharacter를 GetTableData로 함수명을 변경했다, 모든 int형 변수를 int32로 변경하였다, Hold스킬을 삭제하고 HurricaneKick(스트리트 파이터에서 본듯한..) 을 추가하였다. 해당 스킬은 키 입력시 몽타주 재생이 되는 정도까지로 완성되었다.
2023/09/18 : Player 물리공결 토대 완성/ HurricaneKick 작동 확인 및 데미지 적용 확인 , 플레이어 소켓에 충돌 컴포넌트 부착하여 공격 스킬 사용시 데미지 적용되게 함
2023/09/19 : 공격판정 BoxComponent의 Overlap여부를 켜고 끄는 함수 만듦, HurricaneKick 스킬이 끝나면 공격판정 삭제, Enemy 콜리전 설정 변경으로 카메라 무시, 벽 통과버그 해결,
playerAnim에 SkillSequence함수 추가함(스킬 사용시 사용되는 중복된 코드) , Enemy에 KnockBack함수를 추가함, 피격시 플레이어를 보게 함, MainPlayerAnim 의 일부 변수명 수정

2023/09/21 : 넉백 구현을 시도했으나 잘 되지 않아 전부 DisCard, 이후 개발 방향은 스킬의 추가  
2023/09/22 : Enemy의 걷기 모션 새롭게 추가 및 대체=> 블렌드 스페이스1D 조정, 기타 사용하지 않는 애니메이션 삭제, HurricaneKick의 공격 판정주기 재조정 및 재생 배속 조정, Player의 평타 관련된 Punch애니메이션 추가, MainPlayer에 평타(NormalAttack) 함수 추가, 회피 관련 애니메이션 다운로드 겸사겸사 여러가지 파티클 이펙트 및 효과 다운로드 및 테스트프로젝트에 임포트
2023/09/24 : EnemyAI 의 Is TooFar 관련 버그 해결, NormalAttack 커맨드 및 공격기능 추가 등 작동확인, footBox 조정, Punch판정박스 추가, 공격판정 박스를 가리키는 PlayerTempBox 변수를 추가하였다. AttackZoneController 등 다른 기존함수에서 footBox 사용부분을 TempBox로 대체하였다. NormalAttack의 커맨드를 NoCommand로 바꾸고 스킬 출력 알고리즘에 입력 커맨드가 없을 경우 NormalAttack을 하도록 만듦, Enemy의 기본속도 75로 변경, 추적속도 300으로 변경.  Enemy 사망시 좀더 빠른 속도로 사라짐, 생성자에서 Player의 AttackBox 크기 조정, Player 사망, Flying Kick애니메이션 추가 
2023/09/26 : HurricaneKick 애니메이션 루트모션 옵션 조정, 중복되는 코드 함수화  
2023/09/28 : 스킬 아웃풋 시 우클릭 된 지점을 바라보게 하는 코드에서 Z 값을 플레이어 캐릭터와 동일하게 설정, MainPlayer의 스켈레탈 메시에 Root 를 추가하면서 기존의 애니메이션을 전부 새로 변환하여 임포트 하였다.MainPlayer의 스켈레탈 메시에 Root 를 추가하면서 기존의 애니메이션을 전부 새로 변환하여 임포트 하였다..
2023/09/28 : 2023/09/28을 진행하며 생긴 버그를 처리, 일부 애니메이션 리임포트
-추석-
2023/10/04 : PlayerHitBox 가 생성자 변경사항이 있을때마다 이상한데에 적용되는 현상을 수정하고자 BeginPlaye에서 PlayerHitBox의 위치를 조정, HurricaneKick에서 알수없는 애니메이션 재생오류 발생하여 리임포트,KeepWorldTransform로 Player공격판정 존 부착 룰 변경
2023/10/05 : flyingKick모션의 Z축 제한 문제 해결, 그 과정에서 MovementModeChange함수를 구현하여 MovementMode를 변경 할 수 있게함, 기본 무브먼트모드 설정, 플레이어 회전속도 증가 z축 720으로, Dodge 구현, AttackBox 부착위치 변경, BossMonster로 쓸 에셋(Grux)를 마켓플레이스에서 다운로드하여 필요한 부분 이주, 블루프린트 내 불필요해 보이는 기능 정리, 앞으로의 구현 방향 계획, 목표 다음주 이내    
2023/10/06 : 필요없는 주석된 코드 정리, 보스몬스터 구현 방향 고민, Enemy.h 파생 C++ BossMonster파일 생성 및 테스트  
2023/10/09 : MainPlayer가 때린 캐릭터에 따라 OnDamageProcess가 각각 다른 클래스로 적용됨, 이 부분은 아쉬운 부문 추후 수정 필수 
2023/10/10 : 본격적인 Boss AI 개발착수, Black Board의 Key값에 따라 True or False 나타내는 Decorator 완성 , 공격하는 단순한 단계까지 완성, 시작하자마자 levelStart 몽타주 재생, 사용하지 않을것 같은 블렌드스페이스를 1D짜리로 대체하여 간략하게 만듦, Default 스테이트 머신 생성, BP_BossController 수정, 추후 개발방향 BP상에 표시 
BossMonster에서 상속된 기능을 활용 및 이용 하는 테스트 진행, 테스트 파일 생성, 좀더 화려해보이는 스킨 추가 
2023/10/12 : EnemyController의 OnPossess 수정하면서 Boss의 Controller 그것 또한 추가 ,  Boss공격 몽타주 및 노티파이 생성, 시작 몽타주 길이 조정, 컨트롤러 변수 Distance to player 삭제, AttackToPlayer와 Enemy에서 클래스이름으로 다르게 값 적용하도록 함, 이외 자잘한 버그 픽스, LevelStart 몽타주 수정, BossMonster의 BT에 AttackToPlayer추가 및 정상작동확인, 주석처리되어있던 BossMonster의 생성자 다시 활성화,Player의 AttachToComponent를 SetupAttachment로 바꾸었는데 문제가 생길지 두고 봐야함, BossMonster 공격속도 반토막 
2023/10/13 : 보스공격 몽타주에 후딜레이를 위한 애니메션 추가, BossMonster.cpp 에서 Attack함수 오버라이드(왼쪽, 오른쪽 번갈아 공격, 변수 추가), 테스트위한 Boss데미지와 Player HP 임시 변경,공중공격 중 피격시 날아가는 문제 해결, BTT_SetEnemyState Boss에도 작동하게 수정, Boss 피격범위 넓게 설정, fireBall.cpp에도 BossMonster 공격판정추가, BossMonster 사망이벤트 추가  
2023/10/16 : 노티파이 위치 및 기타 수치 조정, 쓰지않는 함수 제거, BossMonster에서 OnDamageProcess 오버라이드, HP 일정 이하 될 시에 공격 모션 변경 되도록 비헤이비어 트리 조정 준비, Enemy 사용하지 않는 knockBack함수 제거 
2023/10/17 : BT_Boss에 일정확률로 다음 노드를 실행하는 비헤이비어트리 태스크 생성, 폴더정리, 특정 조건에서 Enemy를 스폰하려는 시도 
2023/10/19 : SpawnEnemy 부분을 구현하는 과정에서 BTT_SetEnemyState에서 클래스명 비교하는 부분이 잘못되어 있었던 것을 발견. 이것을 수정, Prototype맵에서 BP_EnemyCharacter를 여럿 배치하여 작동을 확인하였으나 SpawnEnemy 부분에서 BlackBoard할당 문제도 해결됨
2023/10/23 : Enemy.cpp의 생성자에서 클래스이름 판별식 수정, BehaviorTree 초기화(할당) 파트 제거(불필요 판단), BT_Boss의 HP판단 노드의 관찰자 중단 옵션 LowerPriority로 수정
AIControllerClass C++단에서 Blackboard 데이터 할당, EnemyController BP에서 PlayerActor 할당방법 변경
2023/10/24 : Enemy와 Boss의 BP에서도 Scene_Placed_PlayerPawn 사용하는 것으로 변경, Placed상태와 Spawn되었을때 BB_Enemy의 FirstLocation과 PlayerActor에 값 할당, Boss의 BehaviorTree 변경(EnemySpawn확률 정상화 및 구조 변경), 다음 공격패턴을 위한 밑작업(공격모션 변황 함수 및 BTT_chasePlayer 수정 등),
버그 수정과 BossMonster의 돌진 구현방향에 대한 계획, BT에서 IsTrace가 True 일때 MoveTo 되도록 설정 
일단 공격, 일반 적 소환시 피격경직 면역되도록 구현, Enemy_Controller에서 ScenePlacedPlayer변수를 사용하는 것을 시도하였으나 실패, 이는 추후 플레이어 정보를 레벨단위에서 관리할때 참조하도록 변경할 예정 

